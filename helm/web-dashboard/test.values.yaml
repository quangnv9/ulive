# Default values for vinivialive-notification.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
revisionHistoryLimit: 3
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

image:
  repository: 071800817092.dkr.ecr.us-east-2.amazonaws.com/vin21083
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "vinivialive-webdashboard-latest"

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env: []

ports:
  - name: main-port
    containerPort: 3000
    protocol: TCP
  - name: liveness-port
    containerPort: 3000
    protocol: TCP

# HealCheck
probes:
  enabled: false
  startupProbe:
    httpGet:
      path: /api/v1/health/kube-startup
      port: liveness-port
      httpHeaders:
        - name: Accept
          value: application/json
    timeoutSeconds: 2
    failureThreshold: 3
    periodSeconds: 5
  livenessProbe:
    httpGet:
      path: /api/v1/health/kube-liveness
      port: liveness-port
      httpHeaders:
        - name: Accept
          value: application/json
    timeoutSeconds: 2
    failureThreshold: 1
    # periodSeconds: 10 (production)
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /api/v1/health/kube-readiness
      port: liveness-port
      httpHeaders:
        - name: Accept
          value: application/json
    initialDelaySeconds: 5
    timeoutSeconds: 2
    failureThreshold: 3
    # periodSeconds: 10 (production)
    periodSeconds: 30

# Config map sharing
configmapVolume:
  enabled: false
  volumeMounts:
    - name: share-configmap-volume
      mountPath: /etc/config/share
    - name: vinivialive-user-configmap-volume
      mountPath: /etc/config/vinivialive-user
  volumes:
    - name: share-configmap-volume
      configMap:
        name: common-configmap
        items:
          - key: share-configmap.yaml
            path: share-configmap.yaml
    - name: vinivialive-user-configmap-volume
      configMap:
        name: vinivialive-user-configmap

service:
  type: ClusterIP
  ports:
    - name: main-port
      port: 80
      targetPort: 3000

mapping:
  prefix:  /
  host: webdashboard.liveshopping.vinivia.dev

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
     cpu: 500m
     memory: 500Mi
  requests:
     cpu: 500m
     memory: 500Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetMemoryUtilizationPercentage: 80
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  # enabled: false
  # nodeAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 1
  #     preference:
  #       matchExpressions:
  #       - key: kops.k8s.io/instancepay
  #         operator: In
  #         values:
  #         - node-spot
